@page
@using Microsoft.AspNetCore.Authorization
@using HotelManager.Authorization
@using HotelManager.Models
@model DetailsModel

@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>ReservationModel</h4>
    <hr/>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ReservationModel.ReservationFrom)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ReservationModel.ReservationFrom)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ReservationModel.ReservationTo)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ReservationModel.ReservationTo)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ReservationModel.HotelID)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ReservationModel.HotelID)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ReservationModel.UserID)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ReservationModel.UserID)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ReservationModel.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ReservationModel.Status)
        </dd>
    </dl>
</div>
<div>

    @{
        var isRejectable = await AuthorizationService.AuthorizeAsync(
            User, Model.ReservationModel, ReservationOperations.Reject
            );
        var isApproveable = await AuthorizationService.AuthorizeAsync(
            User, Model.ReservationModel, ReservationOperations.Approve);

        @if (Model.ReservationModel.Status != ReservationStatus.Approved && isApproveable.Succeeded) {
            <form style="display: inline;" method="post">
                <input hidden name="id" value="@Model.ReservationModel.ReservationId"/>
                <input hidden name="status" value="@ReservationStatus.Approved"/>
                <button type="submit" class="btn btn-xs btn-success">Approve</button>
            </form>
        }
        @if (Model.ReservationModel.Status != ReservationStatus.Rejected && isRejectable.Succeeded) {
            <form style="display: inline;" method="post">
                <input hidden name="id" value="@Model.ReservationModel.ReservationId"/>
                <input hidden name="status" value="@ReservationStatus.Rejected"/>
                <button type="submit" class="btn btn-xs btn-danger">Reject</button>
            </form>
        }

    }
</div>
<div>
    @if (!(isApproveable.Succeeded || isRejectable.Succeeded) || !Model.User.IsInRole(ReservationConstants.ReservationAdminRole)) {
        <a asp-page="./Edit" asp-route-id="@Model.ReservationModel.ReservationId">Edit</a>
        <span>|</span>
    }
    <a asp-page="./Index">Back to List</a>
</div>